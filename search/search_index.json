{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mathesar Documentation","text":"<p>Mathesar is a straightforward open source tool that provides a spreadsheet-like interface to a PostgreSQL database. Our web-based interface helps you and your collaborators work with data more independently and comfortably \u2013 no technical skills needed.</p> <p>You can use Mathesar to build data models, enter data, and even build reports.</p>"},{"location":"#installation","title":"Installation","text":"<p>You host Mathesar on your own server. Currently, we only support installing using Docker Compose, although we will support additional installation methods soon.</p> <ul> <li>Install with Docker Compose.</li> </ul>"},{"location":"contributing/local-dev/","title":"Local development setup","text":""},{"location":"contributing/local-dev/#setup","title":"Setup","text":"<p>First, ensure that you have Docker installed.</p> <p>Clone the repository and then copy the <code>.env.example</code> file to <code>.env</code> like so: <pre><code>cp .env.example .env\n</code></pre></p> <p>From the repository\u2019s root directory, run: <pre><code>docker-compose --profile dev up\n</code></pre></p> <p>You should now have a web server and database server running. Opening <code>http://localhost:8000</code> in your browser will open the application. </p> <p>To get the UI working, you need to login at</p> <p><code>http://localhost:8000/auth/login/</code></p> <p>with username:</p> <p><code>admin</code> </p> <p>and password:</p> <p><code>password</code> </p> <p>If you\u2019d prefer to develop using the Django Rest Framework browsable API, you can use the login functionality at the top right with the same username and password. If you prefer a non-browser tool for API development, you\u2019ll have to: - Use browser to execute one of the methods above, then - Extract the key, value pair for the cookie named <code>sessionid</code> using dev tools. - submit that cookie with each request until it expires. - Repeat as necessary (e.g., when the cookie expires).</p> <p>For sample table data, you can create a new table in the UI using the <code>patents.csv</code> file found in <code>/mathesar/tests/data</code>. </p> <p>It is recommended that you keep the Docker containers running while you make changes to the code. Any change to the code made locally will sync to the container and the version deployed at <code>http://localhost:8000</code> will always be the latest local version of the code.</p>"},{"location":"contributing/local-dev/#developing-in-windows","title":"Developing in Windows","text":"<p>Windows users who want to run the Mathesar Docker development environment in WSL are advised to clone the repository in a Linux filesystem. When the project resides in a Windows filesystem, WSL does not work well with hot module replacement (HMR), which is required for frontend development. Please refer to our Common Issues wiki page, and the frontend development README file for more details.</p>"},{"location":"contributing/local-dev/#configuration-options","title":"Configuration Options","text":"<p>If you want to use Mathesar with a preexisting Postgres DB, modify the <code>DATABASES.mathesar_tables</code> entry of the <code>config/settings.py</code> file with appropriate connection details before installing the Mathesar types and functions by running <code>install.py</code> as described in the previous step. </p>"},{"location":"contributing/local-dev/#frontend","title":"Frontend","text":"<p>For more detailed information on Mathesar\u2019s frontend development, see the README in the <code>mathesar_ui</code> folder.</p>"},{"location":"contributing/local-dev/#documentation","title":"Documentation","text":"<p>For more detailed information on working on Mathesar\u2019s documentation, see the README in the <code>docs</code> folder.</p>"},{"location":"contributing/local-dev/#demo-mode","title":"Demo mode","text":"<p>Mathesar can be run in \u201clive demo mode\u201d. This creates a new database for every user session, adds a banner to the UI, and enables analytics, sent to the Mathesar team.</p> <p>To run Mathesar in demo mode, you should add an environment variable to <code>.env</code>:</p> <pre><code>DJANGO_SETTINGS_MODULE=demo.settings\n</code></pre>"},{"location":"contributing/local-dev/#linting","title":"Linting","text":"<p>To lint the project, run the <code>lint.sh</code> script from the root of the repository. The script requires that the Python virtual environment with <code>flake8</code> be activated and that Node modules be installed in <code>mathesar_ui/</code>. Alternatively, ESLint and Flake8 should be installed globally on the system. <pre><code>./lint.sh\n</code></pre></p> <p>By default, the script lints both Python and Node.js (if changes are staged), but this can be overridden with the <code>-p</code> and <code>-n</code> flags respectively. <pre><code>./lint.sh -p false\n</code></pre></p> <p>You should symlink the script as your pre-commit hook to ensure that your code is linted along-side development. <pre><code>ln -s ../../lint.sh .git/hooks/pre-commit\n</code></pre></p>"},{"location":"contributing/local-dev/#running-tests","title":"Running tests","text":"<p>If you\u2019d like to run tests before pushing, here\u2019s how you do it:</p> <p>Backend tests: <pre><code>docker exec mathesar_service pytest mathesar/ db/\n</code></pre></p> <p>Frontend tests: <pre><code>docker exec mathesar_service bash -c \"cd mathesar_ui &amp;&amp; npm test\"\n</code></pre></p>"},{"location":"contributing/local-dev/#opening-a-shell-in-the-container","title":"Opening a shell in the container","text":"<p>If you need to do some work on the container that\u2019s running the code, here\u2019s how you access it: <pre><code>docker exec -it mathesar_service bash\n</code></pre></p> <p>To open a PostgreSQL psql terminal for the data in Mathesar: <pre><code>docker exec -it mathesar_db psql -U mathesar\n</code></pre></p>"},{"location":"contributing/local-dev/#troubleshooting","title":"Troubleshooting","text":"<p>Please refer to our Common Issues wiki page for instruction on troubleshooting common issues while setting up and running Mathesar.</p>"},{"location":"contributing/welcome/","title":"Welcome!","text":"<p>Thanks for your interest in contributing to Mathesar. Please read through our contribution guide on our wiki to get started.</p>"},{"location":"installation/docker-compose/","title":"Install with Docker Compose","text":"<p>Installation should only take a few minutes.</p>"},{"location":"installation/docker-compose/#requirements","title":"Requirements","text":"<ul> <li>You\u2019ll need to install or upgrade Docker and <code>docker compose</code> on your computer. Mathesar has been tested with Docker v23 and Docker Compose v2.10 (although v2.0 or higher should work).<ul> <li>Docker installation documentation</li> <li><code>docker-compose</code> installation documentation</li> </ul> </li> <li>You need to be a user with root access to the machine you\u2019re trying to install Mathesar on.</li> </ul>"},{"location":"installation/docker-compose/#quickstart","title":"Quickstart","text":"<p>To install the newest version of Mathesar, cut-and-paste the below command into a terminal and follow the instructions:</p> <pre><code>bash &lt;(curl -sL https://raw.githubusercontent.com/centerofci/mathesar/master/install.sh)\n</code></pre> <p>You\u2019ll set up the domain you\u2019ll access Mathesar using and an admin username and password during installation. To access Mathesar, navigate to the domain and login using the admin user name and password.</p>"},{"location":"installation/docker-compose/#administration","title":"Administration","text":"<p>For the commands below, you need to replace <code>$MATHESAR_CONFIG_DIR</code> with the actual value you set during the installation process. By default, this should be <code>/etc/mathesar</code>.</p>"},{"location":"installation/docker-compose/#starting-and-stopping-mathesar","title":"Starting and stopping Mathesar","text":"<p>The command to stop all containers used for Mathesar, and release their ports, etc. is: <pre><code>sudo docker compose -f $MATHESAR_CONFIG_DIR/docker-compose.yml --profile prod down\n</code></pre></p> <p>The command to start Mathesar (say, after stopping it, or a reboot of the machine) is: <pre><code>sudo docker compose -f $MATHESAR_CONFIG_DIR/docker-compose.yml --profile prod up -d\n</code></pre></p>"},{"location":"installation/docker-compose/#upgrading-mathesar","title":"Upgrading Mathesar","text":"<p>The command to manually upgrade Mathesar to the newest version is:</p> <pre><code>sudo docker exec mathesar-watchtower-1 /watchtower --run-once\n</code></pre>"},{"location":"installation/docker-compose/#under-the-hood","title":"Under the Hood","text":""},{"location":"installation/docker-compose/#installation-steps","title":"Installation Steps","text":"<p>These are the steps that the installation script performs, explained in more depth:</p>"},{"location":"installation/docker-compose/#docker-version-check","title":"Docker Version Check","text":"<p>The installer double-checks your Docker and Docker Compose versions, making sure that <code>docker</code> is at least version 20.0.0, and <code>docker-compose</code> is at least version 2.0.0.</p>"},{"location":"installation/docker-compose/#database-configuration","title":"Database Configuration","text":"<p>Mathesar actually uses two databases; one internal system database for metadata such as table display options, and a separate user database for your actual table data. The installer helps you set up credentials for both databases (a username and password), and also lets you customize the name of your user database. Finally, Mathesar helps you customize the port exposed to your host machine from the database container. This is useful, since you\u2019ll need to have an exposed port to login to the Mathesar database(s) using an alternate client such as <code>psql</code>, but there could be a conflict on the default port. </p> <p>The credentials created in this section are used to login directly to the database (i.e., not through the Mathesar UI).</p> <p>Note on permissions: If you choose to connect Mathesar to a preexisting PostgreSQL database, you need to make sure that the user you choose: - exists - Is a <code>SUPERUSER</code>. See the PostgreSQL docs for info about that.</p> <p>Limitation: Mathesar cannot currently connect to a PostgreSQL database running on <code>localhost</code> on the host machine underlying your Docker setup. We\u2019re working on adding this functionality.</p>"},{"location":"installation/docker-compose/#webserver-configuration","title":"Webserver Configuration","text":"<p>This section lets you customize the details of the webserver that provides the Mathesar web UI, and API endpoints. Most of the customizations available here are only relevant if you\u2019re planning to expose your installation of Mathesar to the wider internet. You can configure the domain as well as the ports to use for http and https traffic, respectively.</p>"},{"location":"installation/docker-compose/#admin-user-configuration","title":"Admin User Configuration","text":"<p>Here, the installer helps you create a user (separate from the database user) that you will use to login to Mathesar through the main web UI. This section walks you through that process to create a username and password for that user. You\u2019re allowed to use the same details as the database user above, but it\u2019s not required, or particularly recommended. The user created in this section will have admin privileges in Mathesar, and be able to create other users after the installation is complete.</p>"},{"location":"installation/docker-compose/#configuration-directory","title":"Configuration Directory","text":"<p>We need to store all the details configured above, and we do so in a file in your configuration directory. Note that this contains your passwords and other secrets, so it should be kept secure. By default, this directory is <code>/etc/mathesar/</code>, but you can change it.</p> <p>We\u2019ll store two files under that directory:</p> <ul> <li><code>.env</code>: This file has the above-mentioned configurations.</li> <li><code>docker-compose.yml</code> This is a config file downloaded from Mathesar\u2019s git repo. It defines the different Docker containers used by Mathesar, and how they\u2019re networked together.</li> </ul>"},{"location":"installation/docker-compose/#docker-setup","title":"Docker Setup","text":"<ul> <li>The installer downloads the <code>docker-compose.yml</code> file from Mathesar\u2019s repo.</li> <li>The installer pulls all Docker images needed for Mathesar to run properly, and starts the various services in sequence.</li> </ul>"},{"location":"installation/docker-compose/#final-steps","title":"Final Steps","text":"<p>If everything has worked, then the installer prints a message letting you know that it\u2019s succeeded, and gives a little information about where you should go to login to Mathesar.</p>"},{"location":"installation/docker-compose/#docker-containers","title":"Docker containers","text":"<p>This installation process creates the following containers:</p> <ul> <li><code>mathesar_service</code>, which runs the main Mathesar application.</li> <li><code>mathesar_db</code>, which which runs the database (PostgreSQL 13).</li> <li><code>mathesar-caddy-reverse-proxy-1</code>, which helps route traffic to the <code>mathesar_service</code> container.</li> <li><code>mathesar-watchtower-1</code>, which helps upgrade Mathesar installation when new releases are available.</li> </ul>"},{"location":"installation/docker-compose/#files","title":"Files","text":"<p>This installation process creates the following files in the Mathesar configuration directory:</p> <ul> <li><code>.env</code>. This file defines the environment inside of the various Mathesar <code>docker</code> containers. It should be kept safe, since it has sensitive information about the passwords you set for Mathesar. If you\u2019ve forgotten your admin username or password, look at this file.</li> <li><code>docker-compose.yml</code>. This is the main file defining the Mathesar containers listed above, and the connections between them.</li> </ul>"},{"location":"installation/docker-compose/#troubleshooting","title":"Troubleshooting","text":""},{"location":"installation/docker-compose/#docker-versions","title":"Docker versions","text":"<p>The most common problem we\u2019ve encountered is users with out-of-date <code>docker</code> or <code>docker-compose</code> versions.</p> <ul> <li>To determine your <code>docker-compose</code> version, run <code>docker compose version</code>. (Note the lack of hyphen.) You need <code>docker-compose</code> version 2.0 or higher for the installation to succeed. Better if it\u2019s version 2.10 or higher.</li> <li>To determine your <code>docker</code> version, run <code>docker --version</code>. We\u2019ve tested with <code>docker</code> version 23, but lower versions may work.</li> </ul> <p>If you run <code>docker-compose --version</code> and see a relatively old version, try <code>docker compose version</code> and see whether it\u2019s different. The latter is the version that will be used in the script.</p>"},{"location":"installation/docker-compose/#ports","title":"Ports","text":"<p>You may see errors about various ports being unavailable (or already being bound). In this case, please restart from a clean <code>docker</code> state, and choose non-default ports during the installation process for PostgreSQL, http traffic, or https traffic as appropriate.</p>"},{"location":"installation/docker-compose/#permissions","title":"Permissions","text":"<p>If you have permissions issues when the script begins running <code>docker</code> commands, please double-check that your user is in the <code>sudoers</code> file. Try running <code>sudo -v</code>. If that gives an error, your user lacks needed permissions and you should speak with the administrator of your system.</p>"},{"location":"installation/docker-compose/#getting-more-help","title":"Getting more help","text":"<p>If you\u2019re having an issue not covered by this documentation, please open an issue on GitHub.</p>"},{"location":"product/intro/","title":"Introduction","text":"<p>Welcome! At this point, we assume you\u2019ve installed Mathesar successfully and have logged into the web UI.</p> <p>If you\u2019ve connected Mathesar to an existing database, you should see all your schemas once you log in, and you can work with them as you please.</p> <p>If you\u2019re starting from scratch, we recommend creating a new schema.</p>"},{"location":"product/users/","title":"Users &amp; Access Levels","text":"<p>Mathesar allows you to set up users with different access levels. A user\u2019s access levels determine what they can do with the data managed in Mathesar.</p> <p>Mathesar\u2019s installation process includes setting up the first user. This user is an Admin.</p>"},{"location":"product/users/#managing-users","title":"Managing Users","text":"<ol> <li>Click on the gear icon on the top right of the application and select Administration.</li> <li>In the left sidebar, click on Users.</li> </ol> <p>Note</p> <ul> <li>Only Admins can add new users.</li> <li>Mathesar does not send invitation emails to new users (yet). You\u2019ll need to send the user their username and password yourself.</li> <li>The user will be prompted to change the password when they log in for the first time.</li> </ul>"},{"location":"product/users/#user-types","title":"User Types","text":"<p>Users can be either Admin or Standard users.</p>"},{"location":"product/users/#admin-users","title":"Admin users","text":"<p>Admin users:</p> <ul> <li>can manage other users (view, add, edit, delete)</li> <li>have Manager permissions on all databases and schemas</li> </ul> <p>You cannot set granular permissions for an Admin user.</p>"},{"location":"product/users/#standard-users","title":"Standard users","text":"<p>By default, Standard users cannot see anything in Mathesar. They will need to be granted database or schema roles individually.</p>"},{"location":"product/users/#database-roles","title":"Database Roles","text":"<p>There are three levels of database roles:</p> <ul> <li>Managers own the database. They can edit all data in the database, as well as edit the structure of data (e.g. create tables, add and remove columns, etc.). They also manage access to the database.</li> <li>Editors can edit all data in the database, but cannot change the underlying data structures or manage access.</li> <li>Viewers have read-only access to all data in the database. They cannot make any changes.</li> </ul>"},{"location":"product/users/#manager","title":"Manager","text":"<ul> <li>Receives Manager permissions on all schemas in the database.</li> <li>Can view, add, and remove other users\u2019 access to the database.</li> <li>Can view, add, edit, and remove any schema in the database.</li> <li>Can view, add, edit, and remove any table in the database.</li> <li>Can view, add, edit, and remove any column in the database.</li> <li>Can view, add, edit, and remove any constraint in the database.</li> <li>Can view, add, edit, and remove any record in the database.</li> <li>Can view, add, edit, and remove any exploration in the database.</li> <li>Can perform \u201cextract column\u201d and \u201cmove column\u201d actions</li> </ul>"},{"location":"product/users/#editor","title":"Editor","text":"<ul> <li>Receives Editor permissions on all schemas in the database.</li> <li>Can view any schema in the database.</li> <li>Can view any table in the database.</li> <li>Can view any column in the database.</li> <li>Can view any constraint in the database.</li> <li>Can view, add, edit, and remove any exploration in the database.</li> <li>Can view, add, edit, and remove any record in the database.</li> </ul>"},{"location":"product/users/#viewer","title":"Viewer","text":"<ul> <li>Receives Viewer permissions on all schemas in the database.</li> <li>Can view any schema in the database.</li> <li>Can view any table in the database.</li> <li>Can view any column in the database.</li> <li>Can view any constraint in the database.</li> <li>Can view any exploration in the database.</li> <li>Can use the Data Explorer to create ad-hoc explorations using data in the database, but cannot save them.</li> </ul>"},{"location":"product/users/#managing-database-roles","title":"Managing Database Roles","text":"<p>Note</p> <ul> <li>Only Admins and Database Managers can manage access to a database.</li> </ul> <ol> <li>Click on the Mathesar logo on the top left of the application to go to the database page.</li> <li>Click on the Manage Access button.</li> </ol>"},{"location":"product/users/#schema-roles","title":"Schema Roles","text":"<p>There are three levels of schema roles:</p> <ul> <li>Managers own the schema. They can edit all data in the schema, as well as edit the structure of data (e.g. create tables, add and remove columns, etc.). They also manage access to the schema.</li> <li>Editors can edit all data in the schema, but cannot change the underlying data structures or manage access.</li> <li>Viewers have read-only access to all data in the schema. They cannot make any changes.</li> </ul>"},{"location":"product/users/#manager_1","title":"Manager","text":"<ul> <li>Can view, add, and remove other users\u2019 access to the schema.</li> <li>Can view, add, edit, and remove any schema in the schema.</li> <li>Can view, add, edit, and remove any table in the schema.</li> <li>Can view, add, edit, and remove any column in the schema.</li> <li>Can view, add, edit, and remove any constraint in the schema.</li> <li>Can view, add, edit, and remove any record in the schema.</li> <li>Can view, add, edit, and remove any exploration in the schema.</li> <li>Can perform \u201cextract column\u201d and \u201cmove column\u201d actions</li> </ul>"},{"location":"product/users/#editor_1","title":"Editor","text":"<ul> <li>Can view any table in the schema.</li> <li>Can view any column in the schema.</li> <li>Can view any constraint in the schema.</li> <li>Can view, add, edit, and remove any record in the schema.</li> <li>Can view, add, edit, and remove any exploration in the schema.</li> </ul>"},{"location":"product/users/#viewer_1","title":"Viewer","text":"<ul> <li>Can view any table in the schema.</li> <li>Can view any column in the schema.</li> <li>Can view any constraint in the schema.</li> <li>Can view any exploration in the schema.</li> <li>Can use the Data Explorer to create ad-hoc explorations using data in the schema, but cannot save them.</li> </ul>"},{"location":"product/users/#managing-schema-roles","title":"Managing Schema Roles","text":"<p>Note</p> <ul> <li>Only Admins, Database Managers, and Schema Managers can manage access to a schema.</li> </ul> <ol> <li>Click on the Mathesar logo on the top left of the application to go to the database page.</li> <li>Select the appropriate schema from the list to navigate to the schema\u2019s homepage.</li> <li>Click on the Manage Access button.</li> </ol>"},{"location":"product/users/#order-of-precedence","title":"Order of Precedence","text":"<p>Warning</p> <ul> <li>The Mathesar UI currently has an issue where schema roles always take precedence over database roles. This behavior will is not in line with the API and will be fixed in a future release.</li> </ul> <p>If a user has both a Database Role and a Schema Role for a schema within the same database, the Schema Role will only have an effect if it grants more permissions.</p> <p>Examples:</p> <ul> <li>If a user is a Database Manager but has Viewer permissions on a given schema, the schema role has no effect.</li> <li>If a user is a Database Editor but has Manager permissions on a given schema, the schema role will take precedence.</li> </ul>"}]}